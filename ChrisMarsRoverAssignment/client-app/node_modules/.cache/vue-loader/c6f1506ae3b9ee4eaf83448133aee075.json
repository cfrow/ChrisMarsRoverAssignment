{"remainingRequest":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\src\\components\\MarsRover.vue?vue&type=template&id=16c1dc1e&scoped=true&","dependencies":[{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\src\\components\\MarsRover.vue","mtime":1617640084150},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}