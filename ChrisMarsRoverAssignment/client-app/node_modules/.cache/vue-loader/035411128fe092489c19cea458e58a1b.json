{"remainingRequest":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\src\\components\\MarsRover.vue?vue&type=style&index=0&id=16c1dc1e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\src\\components\\MarsRover.vue","mtime":1617672171755},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\12698\\sites\\ChrisMarsRoverAssignment\\ChrisMarsRoverAssignment\\client-app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWluZXIgewogICAgbWF4LXdpZHRoOiA3MjBweDsKfQoKaDEgewogICAgZm9udC1zaXplOiAzOHB4Owp9Cgo6OnYtZGVlcCBsYWJlbCB7CiAgICBmb250LXNpemU6IDE2cHg7CiAgICBtYXJnaW4tYm90dG9tOiAzcHg7Cn0KCmZvcm0gZGl2IHsKICAgIG1hcmdpbi1ib3R0b206IDE1cHg7Cn0KCmZvcm0gaW5wdXQgewogICAgYmFja2dyb3VuZDogdmFyKC0td2hpdGUpOwogICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1ibHVlKTsKICAgIGhlaWdodDogMzZweDsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsKfQoKZm9ybSB0ZXh0YXJlYSB7CiAgICBiYWNrZ3JvdW5kOiB2YXIoLS13aGl0ZSk7CiAgICBib3JkZXItY29sb3I6IHZhcigtLWJsdWUpOwogICAgZm9udC1zaXplOiAxNnB4OwogICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwp9CgpidXR0b24gewogICAgaGVpZ2h0OiAzNnB4OwogICAgZm9udC1zaXplOiAxNnB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1ibHVlKTsKICAgIGNvbG9yOiB2YXIoLS13aGl0ZSk7Cn0KCi5zcGlubmVyIHsKICAgIG1hcmdpbi1yaWdodDogMTBweDsKfQoKLmJ0bjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWE1ZGFkYzk7Cn0KCi5idG4tc2Vjb25kYXJ5OmRpc2FibGVkLCAuYnRuLXNlY29uZGFyeS5kaXNhYmxlZCB7CiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1ibHVlKTsKfQoKOjp2LWRlZXAgLmZvcm0tY29udHJvbCB7CiAgICBjb2xvcjogdmFyKC0tdGV4dCkgIWltcG9ydGFudDsKfQoKLmNvbnRhaW5lciBpbWcgewogICAgd2lkdGg6IDIwMHB4Owp9CgouaGVscC1ndWlkZSB7CiAgICBtYXJnaW4tdG9wOiA4MHB4Owp9Cgouc3ViLWdyb3VwIHAgewogICAgbWFyZ2luOiAwcHg7CiAgICBtYXJnaW4tbGVmdDogMjBweDsKfQoKZm9ybSBzcGFuIHsKICAgIG1hcmdpbi1yaWdodDogMTBweDsKfQoKLmZhLXF1ZXN0aW9uLWNpcmNsZSB7CiAgICBjb2xvcjogIzFhNWRhZDsKfQo="},{"version":3,"sources":["MarsRover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"MarsRover.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <b-container>\r\n            <b-row class=\"mb-4 text-center\">\r\n                <div>\r\n                    <a href=\"https://mars.nasa.gov/msl/surface-experience/?drive=2176&site=82\" target=\"_blank\">\r\n                        <img src=\"../assets/Nasa_logo.png\" />\r\n                    </a>\r\n                </div>\r\n            </b-row>\r\n            <b-row>\r\n                <h1 class=\"mb-4\"><strong>Mars Rover Instruction Submission</strong></h1>\r\n                <b-form @submit=\"onSubmit\" v-if=\"showForm\">\r\n                    <b-form-group id=\"grid-bounds-group\" label-for=\"grid-bounds\">\r\n                        <template #label>\r\n                            <div class=\"m-0\">\r\n                                <span>Grid Bounds</span>\r\n                                <span v-b-tooltip.hover.right :title=\"boundsTooltip\"><font-awesome-icon icon=\"question-circle\" /></span>\r\n                            </div>\r\n                        </template>\r\n                        <b-form-input id=\"grid-bounds\" v-model=\"form.gridBounds\" type=\"text\" placeholder=\"Enter grid bounds\" required :trim=\"true\" :disabled=\"gridBoundsSubmitted\" />\r\n                        <b-form-invalid-feedback :state=\"gridBoundsValid\">\r\n                            Grid Bounds must be a two digit value (e.x. 55).\r\n                        </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n\r\n                    <b-form-group id=\"position-heading-group\" label-for=\"position-heading\">\r\n                        <template #label>\r\n                            <div class=\"m-0\">\r\n                                <span>Position and Heading</span>\r\n                                <span v-b-tooltip.hover.right :title=\"posHeadingTooltip\"><font-awesome-icon icon=\"question-circle\" /></span>\r\n                            </div>\r\n                        </template>\r\n                        <b-form-input id=\"position-heading\" v-model=\"form.positionHeading\" type=\"text\" placeholder=\"Enter rover position and heading\" required :trim=\"true\" />\r\n                        <b-form-invalid-feedback :state=\"positionHeadingValid\">\r\n                            Position and Heading must be 2 digits followed by a cardinal compass point (e.x. 12N).\r\n                        </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n\r\n                    <b-form-group id=\"movement-group\" label-for=\"movement\">\r\n                        <template #label>\r\n                            <div class=\"m-0\">\r\n                                <span>Requested Movement</span>\r\n                                <span v-b-tooltip.hover.right :title=\"movementTooltip\"><font-awesome-icon icon=\"question-circle\" /></span>\r\n                            </div>\r\n                        </template>\r\n                        <b-form-input id=\"movement\" v-model=\"form.movement\" type=\"text\" placeholder=\"Enter requested movement for rover\" required :trim=\"true\" />\r\n                        <b-form-invalid-feedback :state=\"movementValid\">\r\n                            Movement instructions must contain only turn/move values (e.x. MMRMMRMRRM).\r\n                        </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n\r\n                    <b-button class=\"mt-4\" type=\"submit\" :disabled=\"actionLoading\">\r\n                        <b-spinner v-if=\"actionLoading\" class=\"spinner\" small type=\"grow\"></b-spinner>\r\n                        <span>{{actionLoading ? 'SUBMITTING...' : 'SUBMIT'}}</span>\r\n                    </b-button>\r\n                </b-form>\r\n            </b-row>\r\n\r\n            <b-row class=\"help-guide\">\r\n                <div>\r\n                    <b-card header-tag=\"header\">\r\n                        <template #header>\r\n                            <h5 class=\"mb-0 text-center\">Directions</h5>\r\n                        </template>\r\n                        <b-card-text>\r\n                            <div class=\"sub-group mb-3\">\r\n                                <p>1. Input two digit string to establish grid bounds (e.x. 55)</p>\r\n                                <p>2. Input two digit string followed by a cardinal compass point to confirm current position and heading for rover (e.x. 12N) </p>\r\n                                <p>3. Input a movement string that only contains turn/move values (e.x. MMRMMRMRRM).</p>\r\n                            </div>\r\n                        </b-card-text>\r\n                    </b-card>\r\n                </div>\r\n            </b-row>\r\n\r\n        </b-container>\r\n\r\n        <b-alert :show=\"submissionSuccessMessage !== ''\" class=\"position-fixed fixed-bottom m-0 rounded-0 text-center\" fade variant=\"success\">{{submissionSuccessMessage}}</b-alert>\r\n        <b-alert :show=\"submissionFailMessage !== ''\" class=\"position-fixed fixed-bottom m-0 rounded-0 text-center\" fade variant=\"danger\">{{submissionFailMessage}}</b-alert>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import roverInstruction from '../classes/roverInstruction';\r\n    import axios from 'axios';\r\n\r\n    export default {\r\n        name: 'MarsRover',\r\n        data() {\r\n            return {\r\n                showForm: true,\r\n                submissionSuccessMessage: '',\r\n                submissionFailMessage: '',\r\n                http: null,\r\n                actionLoading: false,\r\n                gridBoundsSubmitted: false,\r\n                gridBoundsValid: true,\r\n                positionHeadingValid: true,\r\n                movementValid: true,\r\n                form: new roverInstruction(),\r\n                boundsTooltip: 'Represents the bounds of the grid atop the plateau. Bounds are represented by XY pair of numbers that correspond with the northeast corner of the plateau.\\\r\n                                Once bounds are confirmed this field will become disabled.',\r\n                posHeadingTooltip: 'Represents the current position and heading of the rover. This is represented by an XYZ string.',\r\n                movementTooltip: 'Represents the desired movement for the rover indicated by a string combination of L, R, and M. L and R instruct the rover to rotate left or right 90 degrees,\\\r\n                                 respectively, whereas M instructs the rover to move forward one grid point.'\r\n            }\r\n        },\r\n        mounted: function () {\r\n            this.http = axios.create({\r\n                baseURL: 'https://localhost:44330/api/'\r\n            });\r\n        },\r\n        methods: {\r\n            async onSubmit(event) {\r\n                event.preventDefault();\r\n\r\n                if (!this.validateFields()) {\r\n                    return;\r\n                }\r\n\r\n                this.actionLoading = true;\r\n\r\n                try {\r\n                    let response = await this.http.post('marsRover', this.form, { responseType: \"application/json\" });\r\n                    this.resetForm();\r\n                    this.actionLoading = false;\r\n\r\n                    this.submissionSuccessMessage = response.data;\r\n                    this.gridBoundsSubmitted = true;\r\n                } catch (e) {\r\n                    this.actionLoading = false;\r\n                    this.submissionFailMessage = e.response.data;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    this.submissionSuccessMessage = '';\r\n                    this.submissionFailMessage = '';\r\n                }, 8000);\r\n            },\r\n            resetForm() {\r\n                this.form.positionHeading = '';\r\n                this.form.movement = '';\r\n\r\n                this.showForm = false;\r\n                this.$nextTick(() => {\r\n                    this.showForm = true;\r\n                })\r\n            },\r\n            validateFields() {\r\n                //grid bounds validation\r\n                const boundsRegex = new RegExp('^[0-9]{2}$');\r\n                this.gridBoundsValid = boundsRegex.test(this.form.gridBounds);\r\n\r\n                //position and heading validation\r\n                const posHeadingRegex = new RegExp('^[0-9]{2}[NnEeSsWw]{1}$');\r\n                this.positionHeadingValid = posHeadingRegex.test(this.form.positionHeading);\r\n\r\n                //movement validation\r\n                const movementRegex = new RegExp('^[L,l,R,r,M,m]+$');\r\n                this.movementValid = movementRegex.test(this.form.movement);\r\n\r\n                return this.gridBoundsValid && this.positionHeadingValid && this.movementValid;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .container {\r\n        max-width: 720px;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 38px;\r\n    }\r\n\r\n    ::v-deep label {\r\n        font-size: 16px;\r\n        margin-bottom: 3px;\r\n    }\r\n\r\n    form div {\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    form input {\r\n        background: var(--white);\r\n        border-color: var(--blue);\r\n        height: 36px;\r\n        font-size: 14px;\r\n        font-family: Arial, sans-serif;\r\n    }\r\n\r\n    form textarea {\r\n        background: var(--white);\r\n        border-color: var(--blue);\r\n        font-size: 16px;\r\n        font-family: Arial, sans-serif;\r\n    }\r\n\r\n    button {\r\n        height: 36px;\r\n        font-size: 16px;\r\n        width: 100%;\r\n        background: var(--blue);\r\n        color: var(--white);\r\n    }\r\n\r\n    .spinner {\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .btn:hover {\r\n        background-color: #1a5dadc9;\r\n    }\r\n\r\n    .btn-secondary:disabled, .btn-secondary.disabled {\r\n        background: var(--blue);\r\n    }\r\n\r\n    ::v-deep .form-control {\r\n        color: var(--text) !important;\r\n    }\r\n\r\n    .container img {\r\n        width: 200px;\r\n    }\r\n\r\n    .help-guide {\r\n        margin-top: 80px;\r\n    }\r\n\r\n    .sub-group p {\r\n        margin: 0px;\r\n        margin-left: 20px;\r\n    }\r\n\r\n    form span {\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .fa-question-circle {\r\n        color: #1a5dad;\r\n    }\r\n</style>\r\n"]}]}